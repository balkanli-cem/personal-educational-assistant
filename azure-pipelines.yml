trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'your-azure-subscription'
  appName: 'personalized-educational-assistant'
  resourceGroupName: 'your-resource-group'
  containerRegistry: 'your-registry.azurecr.io'
  imageRepository: 'personalized-educational-assistant'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.12'
        displayName: 'Use Python 3.12'

    - script: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install -r frontend/requirements.txt
      displayName: 'Install dependencies'

    - script: |
        python -m pytest backend/test_api.py backend/test_ai_endpoints.py backend/test_db.py backend/test_models.py -v
      displayName: 'Run backend tests'
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        OPENAI_API_KEY: $(OPENAI_API_KEY)

    - task: Docker@2
      displayName: 'Build and push image'
      inputs:
        command: 'buildAndPush'
        repository: '$(imageRepository)'
        dockerfile: '$(dockerfilePath)'
        containerRegistry: '$(dockerRegistryServiceConnection)'
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: 'Deploy to Azure'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to Azure Web App'
    environment: 'production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appName: '$(appName)'
              package: '$(Pipeline.Workspace)/**/*.zip'